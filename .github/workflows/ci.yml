on: [push]

name: ci

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v
  build:
    if: contains(github.ref, 'tags/v')
    needs: test
    strategy:
      matrix:
        os:
          - name: macos-latest
            target: x86_64-apple-darwin
          - name: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os.name }}
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: archive-binary
        id: dist
        run: ./ci/tar.sh ${{ github.ref }} ${{ matrix.os.target }}
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.dist.outputs.name }}
          path: dist

  release:
    if: contains(github.ref, 'tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - id: version
        run: |
          echo ::set-output name=version::${TAG##refs/tags/}
        env:
          TAG: ${{ github.ref }}
      - uses: actions/download-artifact@v1
        with:
          name: pack-${{ steps.version.outputs.version }}-x86_64-apple-darwin.tar.gz
      - uses: actions/download-artifact@v1
        with:
          name: pack-${{ steps.version.outputs.version }}-x86_64-unknown-linux-gnu.tar.gz
      - uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          assert_path: ./pack-${{ steps.version.outputs.version }}-x86_64-apple-darwin.tar.gz
          assert_name: pack-${{ steps.version.outputs.version }}-x86_64-apple-darwin.tar.gz
          assert_content_type: application/zip
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          assert_path: ./pack-${{ steps.version.outputs.version }}-x86_64-unknown-linux-gnu.tar.gz
          assert_name: pack-${{ steps.version.outputs.version }}-x86_64-unknown-linux-gnu.tar.gz
          assert_content_type: application/zip
